#!/bin/bash
source /var/vcap/jobs/tests/lib/functions mariadb

mysql() {
  command mysql -h $TARGET -u vcap -pletmein "$@"
}

rc=0
cat <<EOF


##     ## ##    ##  ######   #######  ##
###   ###  ##  ##  ##    ## ##     ## ##
#### ####   ####   ##       ##     ## ##
## ### ##    ##     ######  ##     ## ##
##     ##    ##          ## ##  ## ## ##
##     ##    ##    ##    ## ##    ##  ##
##     ##    ##     ######   ##### ## ########


EOF
echo ">> configuring SHIELD"
cat <<EOF | shield import -
core:  http://<%= link('shield').instances[0].address %>:8080
token: $SHIELD_AUTH_TOKEN

tenants:
  - name: Default Tenant

    systems:
      - name:   mysql-all
        plugin: mysql
        agent:  $TARGET:5444
        config:
          mysql_user:     vcap
          mysql_password: letmein
          mysql_bindir:   /var/vcap/packages/mariadb/bin
        jobs:
          - name:    mysql-all-daily
            when:    daily 4am
            retain:  2d
            storage: s3
            paused:  yes

      - name:   mysql-single
        plugin: mysql
        agent:  $TARGET:5444
        config:
          mysql_user:     vcap
          mysql_password: letmein
          mysql_bindir:   /var/vcap/packages/mariadb/bin
          mysql_database: db1
        jobs:
          - name:    mysql-single-daily
            when:    daily 4am
            retain:  2d
            storage: s3
            paused:  yes
EOF


# ALL DATABASES {{{
echo "> MySQL/MariaDB - All Databases"
echo ">> setting up test data"
mysql <$ROOT/init.sql
mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' >$TMP/db1.dat
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' >$TMP/db2.dat
echo "   db1.t_vals contains:"
sed -e 's/^/    /' <$TMP/db1.dat
echo
echo "   db2.t_keys contains:"
sed -e 's/^/    /' <$TMP/db2.dat
echo

echo ">> running backup job"
wait_for_task $(shield run-job mysql-all-daily | jq -r '.task_uuid')
echo

if ! check_encryption mysql-all; then
    rc=1
fi

echo ">> trashing the data"
echo "   deleting all db1.t_vals records with id's greater than 2"
mysql db1 -e 'DELETE FROM t_vals WHERE id > 2'
echo "   db1.t_vals contains:"
mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' | sed -e 's/^/    /';

echo "   dropping the db2 databse outright"
mysql     -e 'DROP DATABASE db2'
echo "   current databases:"
mysql db1 -e 'SHOW DATABASES' | sed -e 's/^/    /';
echo

echo ">> restoring from backups"
wait_for_task $(restore_latest mysql-all)
echo

echo ">> verifying data, post-restore"
echo "   contents of db1.t_vals:"
mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' | sed -e 's/^/    /'

echo "   contents of db2.t_keys:"
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' | sed -e 's/^/    /'
echo

mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' >$TMP/db1.post
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' >$TMP/db2.post

if ! diff -u $TMP/db1.dat $TMP/db1.post &>/dev/null; then
	echo "!! db1 was not properly restored!"
	echo
	diff -u $TMP/db1.dat $TMP/db1.post || true
	echo
	rc=1
fi

if ! diff -u $TMP/db2.dat $TMP/db2.post &>/dev/null; then
	echo "!! db2 was not properly restored!"
	echo
	diff -u $TMP/db2.dat $TMP/db2.post || true
	echo
	rc=1
fi
echo
# }}}
echo
echo
# SINGLE DATABASE {{{
echo "> MySQL/MariaDB - Single Database"
echo ">> setting up test data"
mysql <$ROOT/init.sql
mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' >$TMP/db1.dat
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' >$TMP/db2.dat
echo "   db1.t_vals contains:"
sed -e 's/^/    /' <$TMP/db1.dat
echo
echo "   db2.t_keys contains:"
sed -e 's/^/    /' <$TMP/db2.dat
echo

echo ">> running backup job"
wait_for_task $(shield run-job mysql-single-daily | jq -r '.task_uuid')
echo

if ! check_encryption mysql-single; then
    rc=1
fi

echo ">> trashing the data"
echo "   deleting all db1.t_vals records with id's greater than 2"
mysql db1 -e 'DELETE FROM t_vals WHERE id > 2'
echo "   db1.t_vals contains:"
mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' | sed -e 's/^/    /'
echo
echo "   truncating the db2.t_keys table altogether"
mysql db2 -e 'TRUNCATE TABLE t_keys'
echo "   db2.t_keys contains:"
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' | sed -e 's/^/    /'
echo

echo ">> restoring from backups"
wait_for_task $(restore_latest mysql-single)
echo

echo ">> verifying data, post-restore"
echo "   contents of db1.t_vals:"
mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' | sed -e 's/^/    /'

echo "   contents of db2.t_keys:"
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' | sed -e 's/^/    /'
echo

mysql db1 -e 'SELECT * FROM t_vals ORDER BY ID ASC' >$TMP/db1.post
mysql db2 -e 'SELECT * FROM t_keys ORDER BY ID ASC' >$TMP/db2.post

if ! diff -u $TMP/db1.dat $TMP/db1.post &>/dev/null; then
	echo "!! db1 was not properly restored!"
	echo
	diff -u $TMP/db1.dat $TMP/db1.post || true
	echo
	rc=1
fi

if diff -u $TMP/db2.dat $TMP/db2.post &>/dev/null; then
	echo "!! db2 should have been left alone, but was not..."
	echo "   (pre- and post- dumps are IDENTICAL, even though we didn't restore db2)"
	echo
	rc=1
fi
# }}}

exit $rc;
