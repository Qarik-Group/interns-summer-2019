#!/bin/bash
source /var/vcap/jobs/tests/lib/functions etcd

#Adding keys and values
addKeyVals() {
    local url=$1
    echo "Putting three keys..."
    ./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url put foo bar
    ./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url put pokemon psyduck
    ./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url put avengers endgame
    echo
}

#Getting values from keys
verifyVals() {
    local url=$1
    if [[ $(./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url get foo --print-value-only) != "bar" ]]; then
        echo "!! foo key was not initialized properly"
    else
        echo "Got correct value for key foo"
    fi

    if [[ $(./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url get pokemon --print-value-only) != "psyduck" ]]; then
        echo "!! pokemon key was not initialized properly"
    else
        echo "Got correct value for key pokemon"
    fi

    if [[ $(./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url get avengers --print-value-only) != "endgame" ]]; then
        echo "!! avengers key was not initialized properly"
    else
        echo "Got correct value for key avengers"
    fi
}

runTests() {
    local target=$1
    local url=$2
    local rc=0

    cd /var/vcap/packages/etcd/bin/
    export ETCDCTL_API=3

    echo -e "Setting up test data\n"
    addKeyVals $url

    echo ">> running backup job"
    wait_for_task $(shield run-job ${target}-daily | jq -r '.task_uuid')
    echo

    echo ">> trashing the data"
    ./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url put pokemon ditto
    ./etcdctl --cacert=/var/vcap/jobs/tests/data/etcd-tls/tls/cert.pem --key=/var/vcap/data/etcd/key.pem --cert=/var/vcap/data/etcd/cert.pem --endpoints=$url del foo

    if ! check_encryption ${target}; then
        rc=1
    fi

    echo ">> restoring from backups"
    wait_for_task $(restore_latest ${target})
    echo

    echo "Verifying test data"
    verifyVals $url
    return $rc;
}

rc=0
cat <<EOF


###### ########  ###### ######
#         #     #       #     #
#         #    #        #      #
#####     #    #        #       #
#         #    #        #      #
#         #     #       #     #
######    #      ###### #####


EOF

echo ">> configuring SHIELD"
cat <<EOF | shield import -
core:  http://<%= link('shield').instances[0].address %>:8080
token: $SHIELD_AUTH_TOKEN

tenants:
  - name: Default Tenant

    systems:
      - name:   etcd-notls
        plugin: etcd
        agent:  $TARGET:5444
        config:
          endpoints:                http://$TARGET:2379
          overwrite:                true
        jobs:
          - name:    etcd-notls-daily
            when:    daily 5am
            retain:  2d
            storage: s3
            paused:  yes

      - name:   etcd-tls
        plugin: etcd
        agent:  $TARGET:5444
        config:
          endpoints:                https://$TARGET:2479
          overwrite:                true
          auth:						true
          caCertPath:				/var/vcap/jobs/targets/config/etcd/tls/cert.pem
          clientCertPath:			/var/vcap/data/etcd/cert.pem
          clientKeyPath:			/var/vcap/data/etcd/key.pem
        jobs:
          - name:    etcd-tls-daily
            when:    daily 5am
            retain:  2d
            storage: s3
            paused:  yes
EOF

echo "Testing etcd without tls..."
runTests etcd-notls http://$TARGET:2379
rc=$?
echo

echo "Testing etcd with tls..."
runTests etcd-tls https://$TARGET:2479
rc=$(($rc + $?))

exit $rc